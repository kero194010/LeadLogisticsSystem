@*@model LLII_Systems.Models.Item

    @{
        ViewBag.Title = "New Item";
    }

    <style>
        .form-container {
            border: 1px solid #ddd;
            padding: 20px;
            border-radius: 5px;
            background-color: #fff;
        }

        .form-label {
            font-weight: bold;
        }

        .form-control {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-top: 5px;
        }

        .text-danger {
            color: #dc3545;
        }

        .btn-primary {
            background-color: #1877F2;
            border: none;
            color: #fff;
            padding: 10px 20px;
            border-radius: 5px;
            font-weight: bold;
            cursor: pointer;
        }

            .btn-primary:hover {
                background-color: #1566d6;
            }
    </style>
    @using (Html.BeginForm("InsertItem", "WebMasterFile", FormMethod.Post))
    {
        <div class="py-1">
            <div class="row justify-content-center">
                <div class="col-lg-12">

                    @Html.AntiForgeryToken()

                    <div class="form-container">
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary pull-right">Save</button>
                        </div>
                        <h4 class="text-center mb-4">Item Record</h4>
                        <h4>Primary Information</h4>
                        <hr />
                        <div class="mb-1">
                            <div class="form-group row">
                                <div class="col">
                                    @Html.LabelFor(model => model.item_code, "Item Code", new { @class = "form-label" })
                                    @Html.EditorFor(model => model.item_code, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.item_code, "", new { @class = "text-danger" })
                                </div>
                                <div class="col">
                                    @Html.LabelFor(model => model.mother_code, "Mother Code", new { @class = "form-label" })
                                    @Html.EditorFor(model => model.mother_code, new { htmlAttributes = new { @class = "form-control" } })
                                     @Html.ValidationMessageFor(model => model.mother_code, "", new { @class = "text-danger" })
                                </div>
                                <div class="col">
                                    @Html.LabelFor(model => model.client_code, "Client Code", new { @class = "form-label" })
                                    @Html.EditorFor(model => model.client_code, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.client_code, "", new { @class = "text-danger" })
                                </div>

                            </div>
                        </div>
                        <div class="mb-1">
                            <div class="form-group row">

                                <div class="col">
                                    @Html.LabelFor(model => model.item_desc, "Item Name", new { @class = "form-label" })
                                    @Html.EditorFor(model => model.item_desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.item_desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col">
                                    @Html.LabelFor(model => model.secondary_desc, "Secondary Name", new { @class = "form-label" })
                                    @Html.EditorFor(model => model.secondary_desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.secondary_desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col">

                                    <div class="form-check">
                                        @Html.LabelFor(model => model.perishable, "Origin(Perishable or Non-Perishable)", new { @class = "form-check-label" })
                                        @Html.CheckBoxFor(model => model.perishable, new { @class = "form-check-input" })
                                        @Html.ValidationMessageFor(model => model.perishable, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="mb-4">
                            <div class="form-group row">

                                <div class="col">
                                    @Html.LabelFor(model => model.shelf_life, "Shelf Life(in days)", new { @class = "form-label" })
                                    @Html.EditorFor(model => model.shelf_life, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.shelf_life, "", new { @class = "text-danger" })
                                </div>
                                <div class="col">
                                    @Html.LabelFor(model => model.item_source, "Origin", new { @class = "form-label" })
                                    @Html.DropDownListFor(m => m.item_source, new SelectList(new[]
                                      {
                                          new SelectListItem { Text = "Local", Value = "local" },
                                          new SelectListItem { Text = "Import", Value = "import" }
                                      }, "Value", "Text"), "Select a origin", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.item_source, "", new { @class = "text-danger" })
                                </div>
                                <div class="col">

                                </div>

                            </div>

                        </div>










                    </div>

                </div>
            </div>
        </div>

         <----------------------------------------------- ??? ----------------------------------------->

        <div class="py-1">
            <div class="row justify-content-center">
                <div class="col-lg-12">
                    <div class="form-container">
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <a class="nav-link active" data-bs-toggle="tab" href="#home" aria-selected="false" role="tab" tabindex="-1">Unit of Measurement</a>
                            </li>
                            <li class="nav-item" role="presentation">
                                <a class="nav-link " data-bs-toggle="tab" href="#profile" aria-selected="true" role="tab">Category and Pricing</a>
                            </li>
                            <li class="nav-item" role="presentation">
                                <a class="nav-link" data-bs-toggle="tab" href="#inventory" aria-selected="true" role="tab">Inventory Specification</a>
                            </li>

                        </ul>
                        <div id="myTabContent" class="tab-content">
                             Start UOM
                            <div class="tab-pane fade active show" id="home" role="tabpanel">

                                <hr />
                                <div class="mb-3">
                                    <div class="form-group row">
                                        <div class="col">
                                            <label class="form-label">UOM</label>
                                            <input placeholder="Case/Inner/Piece" class="form-control" type="text" id="" name="">
                                        </div>
                                        <div class="col">
                                            <label class="form-label">Stock Unit</label>
                                            <input placeholder="Case/Inner/Piece" class="form-control" type="text" id="" name="">
                                        </div>
                                        <div class="col">

                                        </div>

                                    </div>
                                </div>
                                <div class="mb-3">
                                    <div class="form-group row">
                                        <div class="col">
                                            <label class="form-label">Unit Type</label>
                                            <input placeholder="# Packs/ # Case" class="form-control" type="text" id="" name="">
                                        </div>
                                        <div class="col">
                                            <label class="form-label">Purchase Unit</label>
                                            <input placeholder="Case/Inner/Piece" class="form-control" type="text" id="" name="">
                                        </div>
                                        <div class="col">

                                        </div>

                                    </div>
                                </div>
                                <div class="mb-3">
                                    <div class="form-group row">
                                        <div class="col">
                                            <label class="form-label">Base unit</label>
                                            <input placeholder="Base unit" class="form-control" type="text" id="" name="">
                                        </div>
                                        <div class="col">
                                            <label class="form-label">Sale Unit</label>
                                            <input placeholder="Case/Inner/Piece" class="form-control" type="text" id="" name="">
                                        </div>
                                        <div class="col">

                                        </div>

                                    </div>
                                </div>
                                <div class="mb-3">
                                    <div class="form-group row">
                                        <div class="col">
                                            <label class="form-label">Base to Sale unit conversion rate</label>
                                            <input placeholder="Base conversion rate" class="form-control" type="text" id="" name="">
                                        </div>
                                        <div class="col">

                                        </div>
                                        <div class="col">

                                        </div>

                                    </div>
                                </div>
                            </div>
                             Start Category and Pricing
                            <div class="tab-pane" id="profile" role="tabpanel">

                                <hr />
                                <div class="mb-3">
                                    <div class="form-group row">
                                        <div class="col">
                                            @Html.LabelFor(model => model.item_cat, "Category", new { @class = "form-label" })
                                            @Html.DropDownListFor(model => model.item_cat.Id, (SelectList)ViewBag.Categories, "Select a category", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.item_cat.Id, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col">
                                            @Html.LabelFor(model => model.item_sub_cat, "Sub Category", new { @class = "form-label" })
                                            @Html.DropDownListFor(model => model.item_sub_cat, (SelectList)ViewBag.SubCategories, "Select a sub category", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.item_sub_cat.Id, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col">
                                            <div class="form-check">
                                                @Html.LabelFor(model => model.vat_indicator, "Vat Indicator(Vatable or Non-Vatable)", new { @class = "form-check-label" })
                                                @Html.CheckBoxFor(model => model.vat_indicator, new { @class = "form-check-input" })
                                                @Html.ValidationMessageFor(model => model.vat_indicator, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="mb-3">
                                    <div class="form-group row">
                                        <div class="col">
                                            @Html.LabelFor(model => model.vendor_id, "Vendor", new { @class = "form-label" })
                                            @Html.DropDownListFor(model => model.vendor_id.Id, (SelectList)ViewBag.Vendor, "Select a vendor", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.vendor_id.Id, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col">

                                        </div>
                                        <div class="col">

                                        </div>

                                    </div>
                                </div>
                            </div>
                             Start Inventory
                            <div class="tab-pane" id="inventory" role="tabpanel">

                                <hr />
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.cases_pallet, "Cases Pallet", new { @class = "form-label" })
                                    @Html.EditorFor(model => model.cases_pallet, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.cases_pallet, "", new { @class = "text-danger" })
                                </div>

                                <div class="mb-3">
                                    <div class="form-group row">
                                        <div class="col">
                                            @Html.LabelFor(model => model.weight_uom, "Weight UOM", new { @class = "form-label" })
                                            @Html.EditorFor(model => model.weight_uom, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.weight_uom, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col">
                                            @Html.LabelFor(model => model.weight, "Weight", new { @class = "form-label" })
                                            @Html.EditorFor(model => model.weight, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.weight, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col">
                                            <div class="form-check">
                                                @Html.LabelFor(model => model.with_sf, "With or Without Service Fee", new { @class = "form-check-label" })
                                                @Html.CheckBoxFor(model => model.with_sf, new { @class = "form-check-input" })
                                                @Html.ValidationMessageFor(model => model.with_sf, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <div class="form-group row">
                                        <div class="col">
                                            @Html.LabelFor(model => model.issuance_uom, "Issuance UOM", new { @class = "form-label" })
                                            @Html.EditorFor(model => model.issuance_uom, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.issuance_uom, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col">
                                            @Html.LabelFor(model => model.purchase_uom, "Purchase UOM", new { @class = "form-label" })
                                            @Html.EditorFor(model => model.purchase_uom, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.purchase_uom, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col">
                                            @Html.LabelFor(model => model.dim_uom, "Dimension UOM", new { @class = "form-label" })
                                            @Html.EditorFor(model => model.dim_uom, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.dim_uom, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }*@
@model LLII_Systems.Models.Item

@{
    ViewBag.Title = "New Item";
}

<style>
    /* Styles for form containers, labels, and controls */
    .form-container {
        border: 1px solid #ddd;
        padding: 20px;
        border-radius: 5px;
        background-color: #fff;
    }

    .form-label {
        font-weight: bold;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
        margin-top: 5px;
    }

    .text-danger {
        color: #dc3545;
    }

    .btn-primary {
        border-radius: 5px;
        font-weight: bold;
        cursor: pointer;
    }



    /* Center align the previous and next buttons */
    .button-container {
        text-align: center;
        margin-top: 20px;
        align-content: center;
    }

    #saveButton {
        display: none;
    }

    #prevButton {
        display: none;
    }
</style>
<div class="container d-lg-block d-md-block" style="height:78vh;">
    @using (Html.BeginForm("InsertItem", "WebMasterFile", FormMethod.Post))
    {
        <div class="py-1">
            <div class="row justify-content-center">
                <div class="col-lg-12">
                    @Html.AntiForgeryToken()

                    <div class="form-container" style="height:100%">

                        <h4 class="text-center mb-4">Item Record</h4>

                        <div id="step1" class="form-step">
                            <h4>Step 1: Primary Information</h4>
                            <hr />
                            <div class="mb-3">
                                <div class="form-group row">
                                    <div class="col">
                                       
                                    </div>
                                    <div class="col">
                                        @Html.LabelFor(model => model.item_code, "Item Code", new { @class = "form-label" })
                                        @Html.EditorFor(model => model.item_code, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.item_code, "", new { @class = "text-danger" })
                                       
                                    </div>
                                    <div class="col">
                                        @Html.LabelFor(model => model.item_source, "Source", new { @class = "form-label" })
                                        @Html.DropDownListFor(m => m.item_source, new SelectList(new[]
                                            {
                                                new SelectListItem { Text = "Local", Value = "local" },
                                                new SelectListItem { Text = "Import", Value = "import" }
                                            }, "Value", "Text"), "Select a source", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.item_source, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <div class="form-group row">
                                    <div class="col">                                    
                                    </div>
                                    <div class="col">
                                        @Html.LabelFor(model => model.item_desc, "Item Name", new { @class = "form-label" })
                                        @Html.EditorFor(model => model.item_desc, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.item_desc, "", new { @class = "text-danger" })
                                        <div class="form-check">
                                            @Html.LabelFor(model => model.perishable, "Origin (Perishable or Non-Perishable)", new { @class = "form-check-label" })
                                            @Html.CheckBoxFor(model => model.perishable, new { @class = "form-check-input" })
                                            @Html.ValidationMessageFor(model => model.perishable, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col">                                    
                                    </div>
                                </div>
                            </div>
                           
                        </div>

                        <div id="step2" class="form-step">
                            <h4>Step 2: Secondary Information</h4>
                            <hr />
                            <div class="mb-1">
                                <div class="form-group row">
                                    <div class="col">
                                        @Html.LabelFor(model => model.item_uom, "Unit of Measurement", new { @class = "form-label" })
                                        @Html.DropDownListFor(m => m.item_uom, new SelectList(new[]
                                            {
                                                new SelectListItem { Text = "Case", Value = "case" },
                                                new SelectListItem { Text = "Inner", Value = "inner" },
                                                new SelectListItem { Text = "Piece", Value = "piece" }
                                            }, "Value", "Text"), "Select Item UOM", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.item_uom, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col">
                                        <label class="form-label">Inner per Case</label>
                                        <input placeholder="0" class="form-control" type="text" id="" name="">
                                    </div>
                                    <div class="col">
                                        <label class="form-label">Pieces per Inner</label>
                                        <input placeholder="0" class="form-control" type="text" id="" name="">
                                    </div>
                                    <div class="col">
                                        <label class="form-label">Serving per case</label>
                                        <input placeholder="0" class="form-control" type="text" id="" name="">
                                    </div>
                                    
                                </div>
                                <div class="form-group row">
                                    <div class="col">

                                    </div>
                                    <div class="col">

                                    </div>
                                    <div class="col">

                                    </div>
                                </div>
                            </div>
                        </div>

                        <div id="step3" class="form-step">
                            <h4>Step 3: Additional Information</h4>
                            <hr />
                            <div class="mb-4">
                                <div class="form-group row">
                                    <div class="col">
                                        @Html.LabelFor(model => model.shelf_life, "Shelf Life (in days)", new { @class = "form-label" })
                                        @Html.EditorFor(model => model.shelf_life, new { htmlAttributes = new { @class = "form-control", placeholder = "0", min = "0" } })
                                        @*@Html.ValidationMessageFor(model => model.shelf_life, "", new { @class = "text-danger" })*@
                                    </div>
                                    <div class="col">
                                        @Html.LabelFor(model => model.item_cat, "Category", new { @class = "form-label" })
                                        @Html.DropDownListFor(model => model.item_cat.Id, (SelectList)ViewBag.Categories, "Select a category", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.item_cat.Id, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col">
                                        @Html.LabelFor(model => model.item_sub_cat, "Sub Category", new { @class = "form-label" })
                                        @Html.DropDownListFor(model => model.item_sub_cat.Id, (SelectList)ViewBag.SubCategories, "Select a sub category", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.item_sub_cat.Id, "", new { @class = "text-danger" })
                                    </div>
                                    
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div style="overflow:auto;">
            <div style="float:left;">
                <button type="button" id="prevButton" class="btn btn-primary" onclick="previousStep()">Previous</button>

            </div>
            <div style="float:right;">
                <button type="button" id="nextButton" class="btn btn-primary" onclick="nextStep()">Next</button>
                <button type="submit" class="btn btn-primary" id="saveButton" onclick="saveStep()">Save</button>
            </div>


        </div>


    }
</div>
<script>
    // Script for managing form steps
    var currentStep = 1;
    var formSteps = document.getElementsByClassName("form-step");
    var prevButton = document.getElementById("prevButton");
    var nextButton = document.getElementById("nextButton");
    var saveButton = document.getElementById("saveButton");

    // Hide all form steps except the first one
    for (var i = 1; i < formSteps.length; i++) {
        formSteps[i].style.display = "none";
    }

    // Function to show the next form step
    function nextStep() {
        // Validate the current step before proceeding
        if (validateStep(currentStep)) {
            formSteps[currentStep - 1].style.display = "none";
            formSteps[currentStep].style.display = "block";
            currentStep++;

            // Hide or show previous/next buttons
            if (currentStep === formSteps.length) {
                nextButton.style.display = "none";
                saveButton.style.display = "block";
            } else {
                prevButton.style.display = "block";
                nextButton.style.display = "block";
                saveButton.style.display = "none";
            }
        }
    }
    function saveStep() {
        // Validate the current step before proceeding
        if (validateStep(currentStep)) {
            formSteps[currentStep - 1].style.display = "none";
            formSteps[currentStep].style.display = "block";
            currentStep++;

        }
    }

    // Function to show the previous form step
    function previousStep() {
        formSteps[currentStep - 1].style.display = "none";
        formSteps[currentStep - 2].style.display = "block";
        currentStep--;

        // Hide or show previous/next buttons
        if (currentStep === 1) {
            prevButton.style.display = "none";
        } else {
            prevButton.style.display = "block";
        }

        nextButton.style.display = "block";
        saveButton.style.display = "none";
    }

    // Function to validate the current step
    function validateStep(step) {
        var isValid = true;
        var currentForm = formSteps[step - 1];
        var inputFields = currentForm.getElementsByTagName("input");
        var selectFields = currentForm.getElementsByTagName("select");

        // Validate input fields
        for (var i = 0; i < inputFields.length; i++) {
            var inputField = inputFields[i];
            if (inputField.value.trim() === "") {
                isValid = false;
                inputField.classList.add("is-invalid");
            } else {
                inputField.classList.remove("is-invalid");
            }
        }

        // Validate dropdowns
        for (var i = 0; i < selectFields.length; i++) {
            var selectField = selectFields[i];
            if (selectField.value === "") {
                isValid = false;
                selectField.classList.add("is-invalid");
            } else {
                selectField.classList.remove("is-invalid");
            }
        }

        return isValid;
    }
</script>
